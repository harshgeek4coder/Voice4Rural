{"ast":null,"code":"import { useReducer, useEffect } from \"react\";\nimport axios from \"axios\";\nconst ACTIONS = {\n  MAKE_REQUEST: \"make-request\",\n  GET_DATA: \"get-data\",\n  ERROR: \"error\",\n  UPDATE_HAS_NEXT_PAGE: \"update-has-next-page\"\n};\nconst BASE_URL = \"https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ACTIONS.MAKE_REQUEST:\n      return {\n        loading: true,\n        jobs: []\n      };\n\n    case ACTIONS.GET_DATA:\n      return { ...state,\n        loading: false,\n        jobs: action.payload.jobs\n      };\n\n    case ACTIONS.ERROR:\n      return { ...state,\n        loading: false,\n        error: action.payload.error,\n        jobs: []\n      };\n\n    case ACTIONS.UPDATE_HAS_NEXT_PAGE:\n      return { ...state,\n        hasNextPage: action.payload.hasNextPage\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default function useFetchJobs(params, page) {\n  const [state, dispatch] = useReducer(reducer, {\n    jobs: [],\n    loading: true\n  });\n  useEffect(() => {\n    const cancelToken1 = axios.CancelToken.source();\n    dispatch({\n      type: ACTIONS.MAKE_REQUEST\n    });\n    axios.get(BASE_URL, {\n      cancelToken: cancelToken1.token,\n      params: {\n        markdown: true,\n        page: page,\n        ...params\n      }\n    }).then(res => {\n      dispatch({\n        type: ACTIONS.GET_DATA,\n        payload: {\n          jobs: res.data\n        }\n      });\n    }).catch(e => {\n      if (axios.isCancel(e)) return;\n      dispatch({\n        type: ACTIONS.ERROR,\n        payload: {\n          error: e\n        }\n      });\n    });\n    const cancelToken2 = axios.CancelToken.source();\n    axios.get(BASE_URL, {\n      cancelToken: cancelToken2.token,\n      params: {\n        markdown: true,\n        page: page + 1,\n        ...params\n      }\n    }).then(res => {\n      dispatch({\n        type: ACTIONS.UPDATE_HAS_NEXT_PAGE,\n        payload: {\n          hasNextPage: res.data.length !== 0\n        }\n      });\n    }).catch(e => {\n      if (axios.isCancel(e)) return;\n      dispatch({\n        type: ACTIONS.ERROR,\n        payload: {\n          error: e\n        }\n      });\n    });\n    return () => {\n      cancelToken1.cancel();\n      cancelToken2.cancel();\n    };\n  }, [params, page]);\n  return state;\n}","map":{"version":3,"sources":["/Users/sakshichoudhary/Desktop/Voice4Rural/src/Pages/Jobs/useFetchJobs.js"],"names":["useReducer","useEffect","axios","ACTIONS","MAKE_REQUEST","GET_DATA","ERROR","UPDATE_HAS_NEXT_PAGE","BASE_URL","reducer","state","action","type","loading","jobs","payload","error","hasNextPage","useFetchJobs","params","page","dispatch","cancelToken1","CancelToken","source","get","cancelToken","token","markdown","then","res","data","catch","e","isCancel","cancelToken2","length","cancel"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,YAAY,EAAE,cADA;AAEdC,EAAAA,QAAQ,EAAE,UAFI;AAGdC,EAAAA,KAAK,EAAE,OAHO;AAIdC,EAAAA,oBAAoB,EAAE;AAJR,CAAhB;AAOA,MAAMC,QAAQ,GACZ,4EADF;;AAGA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,OAAO,CAACC,YAAb;AACE,aAAO;AAAES,QAAAA,OAAO,EAAE,IAAX;AAAiBC,QAAAA,IAAI,EAAE;AAAvB,OAAP;;AACF,SAAKX,OAAO,CAACE,QAAb;AACE,aAAO,EAAE,GAAGK,KAAL;AAAYG,QAAAA,OAAO,EAAE,KAArB;AAA4BC,QAAAA,IAAI,EAAEH,MAAM,CAACI,OAAP,CAAeD;AAAjD,OAAP;;AACF,SAAKX,OAAO,CAACG,KAAb;AACE,aAAO,EACL,GAAGI,KADE;AAELG,QAAAA,OAAO,EAAE,KAFJ;AAGLG,QAAAA,KAAK,EAAEL,MAAM,CAACI,OAAP,CAAeC,KAHjB;AAILF,QAAAA,IAAI,EAAE;AAJD,OAAP;;AAMF,SAAKX,OAAO,CAACI,oBAAb;AACE,aAAO,EAAE,GAAGG,KAAL;AAAYO,QAAAA,WAAW,EAAEN,MAAM,CAACI,OAAP,CAAeE;AAAxC,OAAP;;AACF;AACE,aAAOP,KAAP;AAfJ;AAiBD;;AAED,eAAe,SAASQ,YAAT,CAAsBC,MAAtB,EAA8BC,IAA9B,EAAoC;AACjD,QAAM,CAACV,KAAD,EAAQW,QAAR,IAAoBrB,UAAU,CAACS,OAAD,EAAU;AAAEK,IAAAA,IAAI,EAAE,EAAR;AAAYD,IAAAA,OAAO,EAAE;AAArB,GAAV,CAApC;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,YAAY,GAAGpB,KAAK,CAACqB,WAAN,CAAkBC,MAAlB,EAArB;AACAH,IAAAA,QAAQ,CAAC;AAAET,MAAAA,IAAI,EAAET,OAAO,CAACC;AAAhB,KAAD,CAAR;AACAF,IAAAA,KAAK,CACFuB,GADH,CACOjB,QADP,EACiB;AACbkB,MAAAA,WAAW,EAAEJ,YAAY,CAACK,KADb;AAEbR,MAAAA,MAAM,EAAE;AAAES,QAAAA,QAAQ,EAAE,IAAZ;AAAkBR,QAAAA,IAAI,EAAEA,IAAxB;AAA8B,WAAGD;AAAjC;AAFK,KADjB,EAKGU,IALH,CAKSC,GAAD,IAAS;AACbT,MAAAA,QAAQ,CAAC;AAAET,QAAAA,IAAI,EAAET,OAAO,CAACE,QAAhB;AAA0BU,QAAAA,OAAO,EAAE;AAAED,UAAAA,IAAI,EAAEgB,GAAG,CAACC;AAAZ;AAAnC,OAAD,CAAR;AACD,KAPH,EAQGC,KARH,CAQUC,CAAD,IAAO;AACZ,UAAI/B,KAAK,CAACgC,QAAN,CAAeD,CAAf,CAAJ,EAAuB;AACvBZ,MAAAA,QAAQ,CAAC;AAAET,QAAAA,IAAI,EAAET,OAAO,CAACG,KAAhB;AAAuBS,QAAAA,OAAO,EAAE;AAAEC,UAAAA,KAAK,EAAEiB;AAAT;AAAhC,OAAD,CAAR;AACD,KAXH;AAaA,UAAME,YAAY,GAAGjC,KAAK,CAACqB,WAAN,CAAkBC,MAAlB,EAArB;AACAtB,IAAAA,KAAK,CACFuB,GADH,CACOjB,QADP,EACiB;AACbkB,MAAAA,WAAW,EAAES,YAAY,CAACR,KADb;AAEbR,MAAAA,MAAM,EAAE;AAAES,QAAAA,QAAQ,EAAE,IAAZ;AAAkBR,QAAAA,IAAI,EAAEA,IAAI,GAAG,CAA/B;AAAkC,WAAGD;AAArC;AAFK,KADjB,EAKGU,IALH,CAKSC,GAAD,IAAS;AACbT,MAAAA,QAAQ,CAAC;AACPT,QAAAA,IAAI,EAAET,OAAO,CAACI,oBADP;AAEPQ,QAAAA,OAAO,EAAE;AAAEE,UAAAA,WAAW,EAAEa,GAAG,CAACC,IAAJ,CAASK,MAAT,KAAoB;AAAnC;AAFF,OAAD,CAAR;AAID,KAVH,EAWGJ,KAXH,CAWUC,CAAD,IAAO;AACZ,UAAI/B,KAAK,CAACgC,QAAN,CAAeD,CAAf,CAAJ,EAAuB;AACvBZ,MAAAA,QAAQ,CAAC;AAAET,QAAAA,IAAI,EAAET,OAAO,CAACG,KAAhB;AAAuBS,QAAAA,OAAO,EAAE;AAAEC,UAAAA,KAAK,EAAEiB;AAAT;AAAhC,OAAD,CAAR;AACD,KAdH;AAgBA,WAAO,MAAM;AACXX,MAAAA,YAAY,CAACe,MAAb;AACAF,MAAAA,YAAY,CAACE,MAAb;AACD,KAHD;AAID,GArCQ,EAqCN,CAAClB,MAAD,EAASC,IAAT,CArCM,CAAT;AAuCA,SAAOV,KAAP;AACD","sourcesContent":["import { useReducer, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst ACTIONS = {\n  MAKE_REQUEST: \"make-request\",\n  GET_DATA: \"get-data\",\n  ERROR: \"error\",\n  UPDATE_HAS_NEXT_PAGE: \"update-has-next-page\",\n};\n\nconst BASE_URL =\n  \"https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ACTIONS.MAKE_REQUEST:\n      return { loading: true, jobs: [] };\n    case ACTIONS.GET_DATA:\n      return { ...state, loading: false, jobs: action.payload.jobs };\n    case ACTIONS.ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n        jobs: [],\n      };\n    case ACTIONS.UPDATE_HAS_NEXT_PAGE:\n      return { ...state, hasNextPage: action.payload.hasNextPage };\n    default:\n      return state;\n  }\n}\n\nexport default function useFetchJobs(params, page) {\n  const [state, dispatch] = useReducer(reducer, { jobs: [], loading: true });\n\n  useEffect(() => {\n    const cancelToken1 = axios.CancelToken.source();\n    dispatch({ type: ACTIONS.MAKE_REQUEST });\n    axios\n      .get(BASE_URL, {\n        cancelToken: cancelToken1.token,\n        params: { markdown: true, page: page, ...params },\n      })\n      .then((res) => {\n        dispatch({ type: ACTIONS.GET_DATA, payload: { jobs: res.data } });\n      })\n      .catch((e) => {\n        if (axios.isCancel(e)) return;\n        dispatch({ type: ACTIONS.ERROR, payload: { error: e } });\n      });\n\n    const cancelToken2 = axios.CancelToken.source();\n    axios\n      .get(BASE_URL, {\n        cancelToken: cancelToken2.token,\n        params: { markdown: true, page: page + 1, ...params },\n      })\n      .then((res) => {\n        dispatch({\n          type: ACTIONS.UPDATE_HAS_NEXT_PAGE,\n          payload: { hasNextPage: res.data.length !== 0 },\n        });\n      })\n      .catch((e) => {\n        if (axios.isCancel(e)) return;\n        dispatch({ type: ACTIONS.ERROR, payload: { error: e } });\n      });\n\n    return () => {\n      cancelToken1.cancel();\n      cancelToken2.cancel();\n    };\n  }, [params, page]);\n\n  return state;\n}\n"]},"metadata":{},"sourceType":"module"}
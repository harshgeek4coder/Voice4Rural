{"version":3,"sources":["../../src/portal.tsx"],"names":["useCallbackRef","useForceUpdate","useSafeLayoutEffect","createContext","__DEV__","React","createPortal","usePortalManager","PortalContextProvider","usePortalContext","strict","name","Container","props","children","zIndex","position","Portal","tempNode","useRef","portal","forceUpdate","getContainer","onMount","onUnmount","parentPortal","manager","current","doc","ownerDocument","host","body","createElement","className","appendChild","portalNode","contains","removeChild","childrenToRender","selector","displayName"],"mappings":"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","sourcesContent":["import {\n  useCallbackRef,\n  useForceUpdate,\n  useSafeLayoutEffect,\n} from \"@chakra-ui/hooks\"\nimport { createContext, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport { createPortal } from \"react-dom\"\nimport { usePortalManager } from \"./portal-manager\"\n\ntype PortalContext = HTMLDivElement | null\n\nconst [PortalContextProvider, usePortalContext] = createContext<PortalContext>({\n  strict: false,\n  name: \"PortalContext\",\n})\n\nconst Container: React.FC<{ zIndex?: number }> = (props) => {\n  const { children, zIndex } = props\n  return (\n    <div\n      className=\"chakra-portal-zIndex\"\n      style={{ position: \"relative\", zIndex }}\n    >\n      {children}\n    </div>\n  )\n}\n\nexport interface PortalProps {\n  /**\n   * Function called when the portal mounts\n   */\n  onMount?(): void\n  /**\n   * Function called when the portal unmounts\n   */\n  onUnmount?(): void\n  /**\n   * Function that will be called to get the parent element\n   * that the portal will be attached to.\n   */\n  getContainer?: () => HTMLElement | null\n  /**\n   * The content or node you'll like to portal\n   */\n  children: React.ReactNode\n}\n\n/**\n * Portal\n *\n * Declarative component used to render children into a DOM node\n * that exists outside the DOM hierarchy of the parent component.\n *\n * @see Docs https://chakra-ui.com/docs/overlay/portal\n */\n\nexport function Portal(props: PortalProps) {\n  const tempNode = React.useRef<HTMLDivElement | null>(null)\n  const portal = React.useRef<HTMLDivElement | null>(null)\n\n  const forceUpdate = useForceUpdate()\n\n  const getContainer = useCallbackRef(props.getContainer)\n  const onMount = useCallbackRef(props.onMount)\n  const onUnmount = useCallbackRef(props.onUnmount)\n\n  const parentPortal = usePortalContext()\n  const manager = usePortalManager()\n\n  useSafeLayoutEffect(() => {\n    if (!tempNode.current) return\n\n    const doc = tempNode.current!.ownerDocument\n    const host = getContainer() ?? parentPortal ?? doc.body\n\n    /**\n     * host may be `null` when a hot-loader\n     * replaces components on the page\n     */\n    if (!host) return\n\n    portal.current = doc.createElement(\"div\")\n    portal.current.className = Portal.className\n\n    host.appendChild(portal.current)\n    forceUpdate()\n\n    onMount()\n\n    const portalNode = portal.current\n    return () => {\n      onUnmount()\n      if (host.contains(portalNode)) {\n        host.removeChild(portalNode)\n      }\n    }\n  }, [])\n\n  const childrenToRender = manager?.zIndex ? (\n    <Container zIndex={manager.zIndex}>{props.children}</Container>\n  ) : (\n    props.children\n  )\n\n  return portal.current ? (\n    createPortal(\n      <PortalContextProvider value={portal.current}>\n        {childrenToRender}\n      </PortalContextProvider>,\n      portal.current,\n    )\n  ) : (\n    <span ref={tempNode} />\n  )\n}\n\nPortal.className = \"chakra-portal\"\nPortal.selector = `.${Portal.className}`\n\nif (__DEV__) {\n  Portal.displayName = \"Portal\"\n}\n"],"file":"portal.js"}